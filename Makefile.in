UNAME       := $(shell uname)

CC          := @CC@
LIBNAME			:= libminitest
LIBEXT      := so
CFILES      := src/assertions.c src/mocks.c src/minitest.c
HFILES			:= inc/assertions.h inc/macros.h inc/minitest.h inc/mock.h
OBJECTS     := assertions.o mocks.o minitest.o
CFLAGS			:= @CFLAGS@
ADDFLAGS    := -O2 -std=c11
ADDSFLAGS   :=

OBJDIR      := obj
TESTFILES   := $(wildcard test/*.c)
TESTOBJS    := $(TESTFILES:test/%.c=$(OBJDIR)/%.o)

TESTWRAPDMP   := 0

ifeq ($(OS), Windows_NT)
  LIBEXT    := dll
  SYSLIBDIR := /c/Windows/system32
  SYSINCDIR := /usr/include
  ADDFLAGS  := $(ADDFLAGS) -L/c/Windows/system32
else
  ifeq ($(UNAME), Linux)
    SYSLIBDIR := /usr/local/lib
    SYSINCDIR := /usr/local/include
    ADDFLAGS  := $(ADDFLAGS) -fPIC
    ADDSFLAGS := $(ADDFLAGS) -D LD_WRAP -Wl,--wrap=add_ints
  endif
  
  ifeq ($(UNAME), Darwin)
    SYSLIBDIR := /usr/local/lib
    SYSINCDIR := /usr/local/include
    ADDSFLAGS := $(ADDFLAGS) -D LD_WRAP
    TESTWRAPDMP  := 1
  endif
endif

all: sharedlib install tests

sharedlib:
	$(CC) $(CFLAGS) $(ADDFLAGS) -c $(CFILES)
	$(CC) -shared $(OBJECTS) -o lib/$(LIBNAME).$(LIBEXT)

install:
	cp lib/$(LIBNAME).$(LIBEXT) $(SYSLIBDIR)
	mkdir $(SYSINCDIR)/minitest
	cp $(HFILES) $(SYSINCDIR)/minitest

uninstall:
	rm $(SYSLIBDIR)/$(LIBNAME).$(LIBEXT)
	rm -rf $(SYSINCDIR)/minitest

tests: $(TESTOBJS)
ifeq ($(TESTWRAPDMP),1)
	/usr/local/opt/binutils/bin/gobjcopy obj/support.o --redefine-sym ___wrap_add_ints=___real_add_ints obj/support.o
	$(CC) $(CFLAGS) $(ADDFLAGS) $(ADDSFLAGS) -o bin/testsuite $(TESTOBJS) -lminitest
else
	$(CC) $(CFLAGS) $(ADDFLAGS) $(ADDSFLAGS) -o bin/testsuite $(TESTOBJS) -lminitest
endif

$(TESTOBJS): $(OBJDIR)/%.o : test/%.c
	$(CC) $(CFLAGS) $(ADDFLAGS) $(ADDSFLAGS) -c $< -o $@
	/usr/local/opt/binutils/bin/gobjcopy  --redefine-sym _add_ints=___wrap_add_ints $@

clean:
	rm *.o
	rm obj/*.o
	rm lib/$(LIBNAME).$(LIBEXT)
	rm config.log
	rm config.status
	rm configure
	rm Makefile
	rm -rf autom4te.cache
	rm bin/testsuite
